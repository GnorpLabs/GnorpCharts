apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "sptFika.fullname" .}}
  labels:
    {{- include "sptFika.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "sptFika.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "sptFika.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      containers:
        - name: spt-fika
          image: "{{ .Values.sptFika.repository }}:{{ .Values.sptFika.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.sptFika.pullPolicy }}
          ports:
            - name: server 
              containerPort: {{ .Values.service.serverService.port }}
              protocol: {{ .Values.service.serverService.protocol }}
          env:
            - name: UID
              value: "{{ .Values.enviornment.UID }}"
            - name: GID
              value: "{{ .Values.enviornment.GID }}"
            - name: INSTALL_FIKA
              value: "{{ .Values.enviornment.INSTALL_FIKA }}"
            - name: FIKA_VERSION
              value: "{{ .Values.enviornment.FIKA_VERSION }}"
            - name: AUTO_UPDATE_FIKA
              value: "{{ .Values.enviornment.AUTO_UPDATE_FIKA }}"
            - name: AUTO_UPDATE_SPT
              value: "{{ .Values.enviornment.AUTO_UPDATE_SPT }}"
            - name: INSTALL_OTHER_MODS
              value: "{{ .Values.enviornment.INSTALL_OTHER_MODS }}"
            - name: MOD_URLS_TO_DOWNLOAD
              value: "{{ .Values.enviornment.MOD_URLS_TO_DOWNLOAD }}"
            - name: TAKE_OWNERSHIP
              value: "{{ .Values.enviornment.TAKE_OWNERSHIP }}"
            - name: CHANGE_PERMISSIONS 
              value: "{{ .Values.enviornment.CHANGE_PERMISSIONS }}"
            - name: ENABLE_PROFILE_BACKUP
              value: "{{ .Values.enviornment.ENABLE_PROFILE_BACKUP }}"
            - name: LISTEN_ALL_NETWORKS
              value: "{{ .Values.enviornment.LISTEN_ALL_NETWORKS }}"
            - name: TZ
              value: "{{ .Values.enviornment.TZ }}"
            - name: NUM_HEADLESS_PROFILES
              value: "{{ .Values.enviornment.NUM_HEADLESS_PROFILES }}"
            {{- with .Values.extraEnv }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          volumeMounts:
          - name: server
            mountPath: /opt/server
            {{- if .Values.persistence.server.subPath }}
            subPath: {{ .Values.persistence.server.subPath }}
            {{- end }}

        - name: fika-headless
          image: "{{ .Values.fikaHeadless.repository }}:{{ .Values.fikaHeadless.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.fikaHeadless.pullPolicy }}
          ports:
            - name: headless 
              containerPort: {{ .Values.service.headlessService.port }}
              protocol: {{ .Values.service.headlessService.protocol }}
          env:
            - name: PROFILE_ID
              value: "{{ .Values.enviornment.fikaHeadless.PROFILE_ID }}"
            - name: SERVER_URL
              value: "{{ .Values.enviornment.fikaHeadless.SERVER_URL }}"
            - name: SERVER_PORT
              value: "{{ .Values.enviornment.fikaHeadless.SERVER_PORT }}" 
            - name: HTTPS
              value: "{{ .Values.enviornment.fikaHeadless.HTTPS }}" 
            - name: DISABLE_NODYNAMICAI
              value: "{{ .Values.enviornment.fikaHeadless.DISABLE_NODYNAMICAI }}" 
            - name: USE_MODSYNC
              value: "{{ .Values.enviornment.fikaHeadless.USE_MODSYNC }}" 
            - name: ENABLE_LOG_PURGE
              value: "{{ .Values.enviornment.fikaHeadless.ENABLE_LOG_PURGE }}" 
            - name: AUTO_RESTART_ON_RAID_END
              value: "{{ .Values.enviornment.fikaHeadless.AUTO_RESTART_ON_RAID_END }}"
            - name: ESYNC
              value: "{{ .Values.enviornment.fikaHeadless.ESYNC }}" 
            - name: FSYNC
              value: "{{ .Values.enviornment.fikaHeadless.FSYNC }}"
            - name: NTSYNC
              value: "{{ .Values.enviornment.fikaHeadless.NTSYNC }}" 
            - name: USE_DGPU
              value: "{{ .Values.enviornment.fikaHeadless.USE_DGPU }}" 
            - name: USE_GRAPHICS
              value: "{{ .Values.enviornment.fikaHeadless.USE_GRAPHICS }}" 
            - name: DISABLE_BATCHMODE
              value: "{{ .Values.enviornment.fikaHeadless.DISABLE_BATCHMODE }}" 
            - name: XVFG_DEBUG
              value: "{{ .Values.enviornment.fikaHeadless.XVFG_DEBUG }}" 
            - name: SAVE_LOG_ON_EXIT
              value: "{{ .Values.enviornment.fikaHeadless.SAVE_LOG_ON_EXIT }}" 
            {{- with .Values.extraEnv }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          volumeMounts:
          - name: server
            mountPath: /opt/tarkov
            {{- if .Values.persistence.tarkov.subPath }}
            subPath: {{ .Values.persistence.tarkov.subPath }}
            {{- end }}

      volumes:
        - name: server
          persistentVolumeClaim:
            {{- if .Values.persistence.server.claimName }}
            claimName: "{{ .Values.persistence.server.claimName }}"
            {{- else }}
            claimName: "{{ template "sptFika.fullname" . }}-server"
            {{- end }}
